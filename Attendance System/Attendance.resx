<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uStn2tuljoEdZqwljYkRJ0ZleC3J/9k=
</value>
  </data>
</root>